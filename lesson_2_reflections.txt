What happens when you initialize a repository? Why do you need to do it?

It will create a directory, where are saved metadata, that are crucial to reload previous versions, show commits, and generally manage all
the things with gits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging is part of process, where you will store files, that should be tracked by git, and repository stores these files. It`s good when
you need to add some files, but you are not sure which files you want to add, and if you don`t want to add them in that directory, you
can always change that.

How can you use the staging area to make sure you have one commit per logical change?

I can check the last commit by using  git diff --staged command, or I can check git diff to compare staged file(s), and file(s) in working directory.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

They can be helpful, when I want to create something new, that isn`t tested yet, and it could be buggy, but I still need a working version. That`s the 
exact time when I should start thinking about making a new branch. Another good example can be when I want to make feature, that I`m not sure I want it
in final version, but still would like to try creating it.

How do the diagrams help you visualize the branch structure?

It is very useful, when I want to see where I currently am in my project. It can also be very useful, when I will get lost in my project.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is, that we just connected two different hierachies into one, and we can use all the features we created so far. It is represented the way it
is because the branch wasn`t part of hierachy, but later it was.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: 	-it`s faster to do merges
		-it`s easier to do merges
		-it`s safer to do merges
		
Cons: 	-there can be merging conflicts